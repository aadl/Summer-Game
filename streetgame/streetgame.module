<?php

function streetgame_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#streetgame":
      $output = '<p>'.  t("Enables the Street Game function. All interactions are text message based, no web interaction.") .'</p>';
      break;
  }
  return $output;
}

function streetgame_twilio_respond($incoming) {
  // Set up data connections
  $libphp_path = variable_get('summergame_libphp_path', '');
  include_once($libphp_path . 'contrib/PHP-on-Couch/lib/couch.php');
  include_once($libphp_path . 'contrib/PHP-on-Couch/lib/couchClient.php');
  include_once($libphp_path . 'contrib/PHP-on-Couch/lib/couchDocument.php');
  $couch = new CouchClient('COUCHDB_DSN_STRING', 'streetgame');
  $redis = new Redisent('multivac');

  // Prep generic response array
  $response_template = array('uid' => twilio_lookup_user($incoming['phone']),
                             'phone' => $incoming['phone'],
                             'incoming' => 0);
  $responses = array();

  // Get game data from CouchDB
  $gameDocs = array();
  $docs = $couch->setQueryParameters(array('include_docs' => TRUE))->getAllDocs();
  foreach ($docs->rows as $doc) {
    $gameDocs[$doc->id] = $doc->doc;
  }

  // Sanitize data to characters only
  $incomingtext = strtoupper(preg_replace('/[^A-Za-z0-9]/', '', $incoming['text']));


  // Current Street Game Player? Check as answer to question
  if ($question = $redis->get('streetgame:questioning:' . $incoming['phone'])) {
    // Handle QUIT response
    if ($incomingtext == 'QUIT') {
      $redis->del('streetgame:questioning:' . $incoming['phone']);
      $response = $response_template;
      $response['text'] = 'Exiting game mode. You can play again by entering a code to start.';
      $responses[] = $response;
    }
    else {
      list($gamename, $question_id) = explode(':', $question);
      if ($incomingtext == $gameDocs[$gamename]->questions[$question_id]->answer) {
        // Correct answer, remove questioning and add to progress list
        $redis->del('streetgame:questioning:' . $incoming['phone']);
        $progress_key = 'streetgame:' . $gamename . ':' . $incoming['phone'];
        $redis->sadd($progress_key, $question_id);

        // Check if done
        $completed_ids = $redis->smembers($progress_key);
        if (count($completed_ids) == count($gameDocs[$gamename]->questions)) {
          // Completed! Send Completion text
          $response = $response_template;
          $response['text'] = $gameDocs[$gamename]->completiontext;
          $responses[] = $response;
        }
        else {
          // Find directions to next uncompleted question
          foreach ($gameDocs[$gamename]->directions[$question_id] as $new_id => $direction) {
            if (!in_array($new_id, $completed_ids)) {
              $response = $response_template;
              $response['text'] = $direction;
              $responses[] = $response;
              break;
            }
          }
        }
      }
      else {
        // Incorrect answer, repeat question
        $response = $response_template;
        $response['text'] = "Sorry, that's not what we expected you to say. Text QUIT to stop playing or try again. " . $gameDocs[$gamename]->questions[$question_id]->questiontext;
        $responses[] = $response;
      }
    }
  }
  else {
    // New Sticker Code?
    foreach ($gameDocs as $game) {
      foreach ($game->stickercodes as $id => $stickercode) {
        if ($incomingtext == $stickercode) {
          // Check if player has already completed game
          $progress_key = 'streetgame:' . $game->_id . ':' . $incoming['phone'];
          $completed_ids = $redis->smembers($progress_key);
          if (in_array($id, $completed_ids)) {
            $response = $response_template;
            $response['text'] = 'You have already completed the question for this code.';
            $responses[] = $response;
          }
          else {
            // New sticker location, return corresponding question
            $response = $response_template;
            $response['text'] = $game->questions[$id]->questiontext;
            $responses[] = $response;
            $redis->set('streetgame:questioning:' . $incoming['phone'], $game->_id . ':' . $id);
          }
        }
      }
    }
  }

  if (count($responses)) {
    return $responses;
  }
}
